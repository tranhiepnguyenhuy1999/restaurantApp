<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="foodPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>